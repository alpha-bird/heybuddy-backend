machine:
    pre:
        - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    services:
        - docker
    python:
        version: 2.7.11

dependencies:
    override:
        - pip install docker-compose
        - docker build --rm=false -t heybuddy .
        - docker login -e alpha.birdprime@gmail.com -u alphabird727 -p 'ghost123!@#'
        - echo "Ignoring default CircleCI dependencies"

test:
  override:
    - echo "Skipping tests" # docker-compose run test

deployment:
  hub:
    branch: master
    commands:
        - docker push heybuddy:latest
        - echo export DOCKER_TLS_VERIFY=$(echo $DOCKER_TLS_VERIFY_INT) >> ~/.circlerc
        - echo export DOCKER_HOST=$(echo $DOCKER_HOST_INT) >> ~/.circlerc
        - echo export DOCKER_CERT_PATH=$(echo $DOCKER_CERT_PATH_INT) >> ~/.circlerc
        - mkdir -p $DOCKER_CERT_PATH
        - echo '-----BEGIN CERTIFICATE-----' >> ca.pem && echo $DOCKER_INT_CAPEM | sed -e 's/\s\+/\n/g' >> ca.pem && echo '-----END CERTIFICATE-----' >> ca.pem && touch $DOCKER_CERT_PATH/ca.pem && mv ca.pem $DOCKER_CERT_PATH/ca.pem
        - echo '-----BEGIN CERTIFICATE-----' >> cert.pem && echo $DOCKER_INT_CERTPEM | sed -e 's/\s\+/\n/g' >> cert.pem && echo '-----END CERTIFICATE-----' >> cert.pem && touch $DOCKER_CERT_PATH/cert.pem && mv cert.pem $DOCKER_CERT_PATH/cert.pem
        - echo '-----BEGIN RSA PRIVATE KEY-----' >> key.pem && echo $DOCKER_INT_KEYPEM | sed -e 's/\s\+/\n/g' >> key.pem && echo '-----END RSA PRIVATE KEY-----' >> key.pem && touch $DOCKER_CERT_PATH/key.pem && mv key.pem $DOCKER_CERT_PATH/key.pem
        - echo '-----BEGIN RSA PRIVATE KEY-----' >> server-key.pem && echo $DOCKER_INT_SERVERKEYPEM | sed -e 's/\s\+/\n/g' >> server-key.pem && echo '-----END RSA PRIVATE KEY-----' >> server-key.pem && touch $DOCKER_CERT_PATH/server-key.pem && mv server-key.pem $DOCKER_CERT_PATH/server-key.pem
        - echo '-----BEGIN CERTIFICATE----- ' >> server.pem && echo $DOCKER_INT_SERVERPEM | sed -e 's/\s\+/\n/g' >> server.pem && echo '-----END CERTIFICATE-----' >> server.pem && touch $DOCKER_CERT_PATH/server.pem && mv server.pem $DOCKER_CERT_PATH/server.pem
        - echo '-----BEGIN RSA PRIVATE KEY-----' >> id_rsa && echo $DOCKER_INT_IDRSA | sed -e 's/\s\+/\n/g' >> id_rsa && echo '-----END RSA PRIVATE KEY-----' >> id_rsa && touch $DOCKER_CERT_PATH/id_rsa && mv id_rsa $DOCKER_CERT_PATH/id_rsa
        - echo $DOCKER_INT_IDRSAPUB > id_rsa.pub && mv id_rsa.pub $DOCKER_CERT_PATH/id_rsa.pub
        - docker pull soosap/me:latest
        - git clone git@github.com:alpha-bird/heybuddy-backend.git
        - docker-compose -f saronia-compose/integration/docker-compose.yml up -d
        - docker images --no-trunc | grep none | awk '{print $3}' | xargs docker rmi

        
        - echo '-----BEGIN CERTIFICATE-----' >> ca.pem
            && echo $DOCKER_PROD_CAPEM | sed -e 's/\s\+/\n/g' >> ca.pem
            && echo '-----END CERTIFICATE-----' >> ca.pem
            && touch $DOCKER_CERT_PATH/ca.pem
            && mv ca.pem $DOCKER_CERT_PATH/ca.pem
        - echo export DOCKER_TLS_VERIFY=$(echo $DOCKER_TLS_VERIFY_PROD) >> ~/.circlerc
        - echo export DOCKER_HOST=$(echo $DOCKER_HOST_PROD) >> ~/.circlerc
        - echo export DOCKER_CERT_PATH=$(echo $DOCKER_CERT_PATH_PROD) >> ~/.circlerc
        - docker pull heybuddy:latest
        - git clone git@github.com:alpha-bird/heybuddy-backend.git
        - docker-compose -f hobbyprojects-compose/production/docker-compose.yml up -d
        - docker images --no-trunc | grep none | awk '{print $3}' | xargs docker rmi
